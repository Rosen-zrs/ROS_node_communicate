// Generated by gencpp from file node_communicate/info.msg
// DO NOT EDIT!


#ifndef NODE_COMMUNICATE_MESSAGE_INFO_H
#define NODE_COMMUNICATE_MESSAGE_INFO_H

#include <ros/service_traits.h>


#include <node_communicate/infoRequest.h>
#include <node_communicate/infoResponse.h>


namespace node_communicate
{

struct info
{

typedef infoRequest Request;
typedef infoResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct info
} // namespace node_communicate


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::node_communicate::info > {
  static const char* value()
  {
    return "33ea4e5aeb30f5913da681ca459d55f3";
  }

  static const char* value(const ::node_communicate::info&) { return value(); }
};

template<>
struct DataType< ::node_communicate::info > {
  static const char* value()
  {
    return "node_communicate/info";
  }

  static const char* value(const ::node_communicate::info&) { return value(); }
};


// service_traits::MD5Sum< ::node_communicate::infoRequest> should match
// service_traits::MD5Sum< ::node_communicate::info >
template<>
struct MD5Sum< ::node_communicate::infoRequest>
{
  static const char* value()
  {
    return MD5Sum< ::node_communicate::info >::value();
  }
  static const char* value(const ::node_communicate::infoRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::node_communicate::infoRequest> should match
// service_traits::DataType< ::node_communicate::info >
template<>
struct DataType< ::node_communicate::infoRequest>
{
  static const char* value()
  {
    return DataType< ::node_communicate::info >::value();
  }
  static const char* value(const ::node_communicate::infoRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::node_communicate::infoResponse> should match
// service_traits::MD5Sum< ::node_communicate::info >
template<>
struct MD5Sum< ::node_communicate::infoResponse>
{
  static const char* value()
  {
    return MD5Sum< ::node_communicate::info >::value();
  }
  static const char* value(const ::node_communicate::infoResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::node_communicate::infoResponse> should match
// service_traits::DataType< ::node_communicate::info >
template<>
struct DataType< ::node_communicate::infoResponse>
{
  static const char* value()
  {
    return DataType< ::node_communicate::info >::value();
  }
  static const char* value(const ::node_communicate::infoResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // NODE_COMMUNICATE_MESSAGE_INFO_H
